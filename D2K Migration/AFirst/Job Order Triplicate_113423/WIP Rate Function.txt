CREATE OR REPLACE FUNCTION GINVIEW.cus_fun_get_wip_rate_CUSTOM (
   p_icode           IN   CHAR,
   p_lotcode         IN   NUMBER,
   p_operation_seq        NUMBER
)
   RETURN NUMBER
IS
   v_service_rate     NUMBER;
   v_component_rate   NUMBER;
BEGIN
--=====================================================
   SELECT SUM (service_rate)
     INTO v_service_rate
     FROM (SELECT   operation_seq, MAX (NVL (rate, 0)) service_rate
               FROM prdwiptrans
              WHERE lotcode = p_lotcode
                AND assembly_icode = p_icode
                AND operation_seq < p_operation_seq
                AND item_type = 'SER'
                AND operation_seq = TRUNC (operation_seq)
           GROUP BY operation_seq);

--=====================================================
   SELECT SUM (NVL (jb.bom_qty, 0) * NVL (item.rate, 0)) wipcost
     INTO v_component_rate
     FROM prdjobbom jb,
          (SELECT   operation_seq, MAX (jobcode) jobcode
               FROM prdwiptrans
              WHERE lotcode = p_lotcode
                AND assembly_icode = p_icode
                AND operation_seq < p_operation_seq
                AND operation_seq = TRUNC (operation_seq)
                AND txn_type = 'ORD'
                AND item_type = 'ASS'
           GROUP BY operation_seq) wip,
          (SELECT icode, acrate rate,
                  DENSE_RANK () OVER (PARTITION BY icode ORDER BY grcdt DESC,
                   grccode DESC) drank
             FROM invgrcdet) item
    WHERE jb.jobcode = wip.jobcode
      AND jb.component_icode = item.icode
      AND jb.assembly_icode != jb.component_icode
      AND jb.lotcode = p_lotcode
      AND jb.assembly_icode = p_icode
      AND jb.operation_seq < p_operation_seq
      AND item.drank = 1;

--=====================================================
   RETURN NVL (v_service_rate, 0) + NVL (v_component_rate, 0);
EXCEPTION
   WHEN OTHERS
   THEN
      RETURN NULL;
END;
/
