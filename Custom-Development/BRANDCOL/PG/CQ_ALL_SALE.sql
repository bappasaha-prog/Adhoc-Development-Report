/*|| Custom Development || Object : CQ_ALL_SALE || Ticket Id :  416445 || Developer : Dipankar ||*/

SELECT
	ROW_NUMBER() OVER() AS UK,
	X.*
FROM
	(
	SELECT
		'B2B' SALE_TYPE,
		M.ADMSITE_CODE_OWNER ADMSITE_CODE,
		M.ADMSITE_CODE REF_ADMSITE_CODE,
		M.SCHEME_DOCNO INVOICE_NO,
		M.INVDT::DATE INVOICE_DATE,
		M.DOCNO INVOICE_DOC_NO,
		D.ICODE,
		SO.ORDER_NO,
		SO.ORDER_DATE,
		SO.ORDER_DOC_NO,
		SO.ORDER_DOC_DATE,
		SO.ORDER_QTY ORDER_QTY,
		SO.DC_NO,
		M.PCODE,
		null channel_name,
		null channel_udf,
		NULL PSITE_CUSTOMER_CODE,
		D.OUTLOCCODE::TEXT LOCCODE,
		TAX.ITEM_TAX_RATE,
		D.RATE INVOICE_RATE,
		SUM(D.INVQTY) AS INVOICE_QUANTITY,
		SUM(COALESCE(D.INVAMT, 0) + COALESCE(D.CHGAMT, 0) + COALESCE(D.TAXAMT, 0)) AS NET_SALE_AMOUNT,
		0 RETURNED_QUANTITY,
		SUM(D.INVQTY) NET_SALE_QTY,
		SPLIT_PART(DIS.REM, ',', 1) DISC,
		SPLIT_PART(DIS.REM, ',', 2) SPDISC,
		0 ECOM_DISC_AMT,
		SUM(TAX.TAXABLE_AMOUNT) TAXABLE_AMOUNT,
		SUM(TAX.CGST_AMOUNT) CGST_AMOUNT,
		SUM(TAX.SGST_AMOUNT) SGST_AMOUNT,
		SUM(TAX.IGST_AMOUNT) IGST_AMOUNT,
		0 OTHER_CHARGE,
		M.AGCODE,
		M.LGTCODE,
		F.NAME TARDE_NAME,
		NULL BILL_PROMO_NAME,
		NULL ITEM_PROMO_NAME,
		0    ITEM_PROMO_AMT,
		D.HSN_SAC_CODE,
		EI.E_INVOICE_IRN,
		EI.E_INVOICE_ACK_DATETIME,
		EI.E_INVOICE_ACK_NO,
		M.udfstring01,
		M.udfstring02,
		M.udfstring03,
		M.udfstring04,
		M.udfstring05,
		M.udfstring06,
		M.udfstring07,
		M.udfstring08,
		M.udfstring09,
		M.udfstring10
	FROM
		SALINVMAIN M
	INNER JOIN SALINVDET D ON
		M.INVCODE = D.INVCODE
	LEFT JOIN FINTRADEGRP F ON
		M.SALTRADEGRP_CODE = F.CODE
	LEFT JOIN (
		SELECT
			SI.INVCODE INVCODE,
			SI.ICODE,
			STRING_AGG( DISTINCT ORM.SCHEME_DOCNO, ',' ORDER BY ORM.SCHEME_DOCNO) ORDER_NO,
			STRING_AGG(DISTINCT TO_CHAR(ORM.ORDDT, 'DD-MM-YYYY'), ',' ORDER BY TO_CHAR(ORM.ORDDT, 'DD-MM-YYYY')) ORDER_DATE,
			STRING_AGG( DISTINCT ORM.DOCNO, ',' ORDER BY ORM.DOCNO) ORDER_DOC_NO,
			STRING_AGG(DISTINCT TO_CHAR(ORM.DOCDT, 'DD-MM-YYYY'), ',' ORDER BY TO_CHAR(ORM.DOCDT, 'DD-MM-YYYY')) ORDER_DOC_DATE,
			STRING_AGG( DISTINCT DCM.SCHEME_DOCNO, ',' ORDER BY DCM.SCHEME_DOCNO) DC_NO,
			SUM(ORD.ORDQTY) ORDER_QTY
		FROM
			SALINVDET SI
		JOIN SALINVMAIN SM ON
			SI.INVCODE = SM.INVCODE
		JOIN INVDCMAIN DCM ON
			SI.DCCODE = DCM.DCCODE
		JOIN INVDCDET DCD ON
			DCD.CODE = SI.INVDCDET_CODE
			AND DCM.DCCODE = DCD.DCCODE
		INNER JOIN SALORDMAIN ORM ON
			DCD.ORDCODE = ORM.ORDCODE
		INNER JOIN SALORDDET ORD ON
			ORM.ORDCODE = ORD.ORDCODE
			AND DCD.SALORDDET_CODE = ORD.CODE
		WHERE
			SM.SALETYPE = 'O'
		GROUP BY
			SI.INVCODE,
			SI.ICODE) SO ON
		D.INVCODE = SO.INVCODE
		AND D.ICODE = SO.ICODE
	LEFT JOIN (
		SELECT
			SALINVCHG_ITEM.INVCODE,
			SALINVCHG_ITEM.SALINVDET_CODE,
			SALINVCHG_ITEM.APPAMT AS TAXABLE_AMOUNT,
			SUM(COALESCE(SALINVCHG_ITEM.RATE, 0::NUMERIC)) AS ITEM_TAX_RATE,
			SUM(CASE WHEN SALINVCHG_ITEM.GST_COMPONENT = 'CGST' THEN SALINVCHG_ITEM.CHGAMT ELSE 0 END) AS CGST_AMOUNT,
			SUM(CASE WHEN SALINVCHG_ITEM.GST_COMPONENT = 'SGST' THEN SALINVCHG_ITEM.CHGAMT ELSE 0 END) AS SGST_AMOUNT,
			SUM(CASE WHEN SALINVCHG_ITEM.GST_COMPONENT = 'IGST' THEN SALINVCHG_ITEM.CHGAMT ELSE 0 END) AS IGST_AMOUNT
		FROM
			SALINVCHG_ITEM
		WHERE
			SALINVCHG_ITEM.ISTAX = 'Y'
		GROUP BY
			SALINVCHG_ITEM.SALINVDET_CODE,
			SALINVCHG_ITEM.INVCODE,
			SALINVCHG_ITEM.APPAMT) TAX ON
		D.INVCODE = TAX.INVCODE
		AND D.CODE = TAX.SALINVDET_CODE
	LEFT OUTER JOIN (
		SELECT
				D.INVDCDET_CODE,
				SOD.REM
		FROM
				SALINVDET D
		LEFT JOIN INVDCDET DCD
            ON
				D.INVDCDET_CODE = DCD.CODE
			AND D.DCCODE = DCD.DCCODE
		LEFT JOIN INVDCMAIN DCM ON
				DCD.DCCODE = DCM.DCCODE
		LEFT JOIN SALORDDET SOD
            ON
				DCD.SALORDDET_CODE = SOD.CODE
			AND DCD.ORDCODE = SOD.ORDCODE) DIS ON
			(D.INVDCDET_CODE = DIS.INVDCDET_CODE)
	LEFT JOIN (
		SELECT
			A_1.TRANSACTION_CODE,
			A_1.IRN AS E_INVOICE_IRN,
			A_1.ACK_DATETIME AS E_INVOICE_ACK_DATETIME,
			A_1.ACK_NO AS E_INVOICE_ACK_NO
		FROM
			INVGST_EINVOICE A_1
		LEFT JOIN HRDEMP E ON
			A_1.UPDATED_BY = E.ECODE
		WHERE
			A_1.TRANSACTION_TABLE::TEXT = 'SALINVMAIN'::TEXT) EI ON
		M.INVCODE::TEXT = EI.TRANSACTION_CODE::TEXT
	WHERE
		M.SALETYPE = 'O'
		AND M.INVDT::DATE BETWEEN TO_DATE('@DTFR@','YYYY-MM-DD') AND TO_DATE('@DTTO@','YYYY-MM-DD')
	GROUP BY
		M.ADMSITE_CODE_OWNER,
		M.ADMSITE_CODE,
		M.SCHEME_DOCNO,
		M.INVDT::DATE,
		M.DOCNO,
		D.ICODE,
		SO.ORDER_NO,
		SO.ORDER_DATE,
		SO.ORDER_DOC_NO,
		SO.ORDER_DOC_DATE,
		SO.ORDER_QTY,
		SO.DC_NO,
		M.PCODE,
		D.OUTLOCCODE,
		TAX.ITEM_TAX_RATE,
		D.RATE,
		M.AGCODE,
		M.LGTCODE,
		F.NAME,
		D.HSN_SAC_CODE,
		EI.E_INVOICE_IRN,
		EI.E_INVOICE_ACK_DATETIME,
		EI.E_INVOICE_ACK_NO,
		SPLIT_PART(DIS.REM, ',', 1),
		SPLIT_PART(DIS.REM, ',', 2),
		M.udfstring01,
		M.udfstring02,
		M.udfstring03,
		M.udfstring04,
		M.udfstring05,
		M.udfstring06,
		M.udfstring07,
		M.udfstring08,
		M.udfstring09,
		M.udfstring10
UNION ALL
SELECT 'B2B Return'           SALE_TYPE,
         M.ADMSITE_CODE_OWNER   ADMSITE_CODE,
         M.ADMSITE_CODE         REF_ADMSITE_CODE,
         M.SCHEME_DOCNO         INVOICE_NO,
         M.RTDT::DATE                 INVOICE_DATE,
         M.DOCNO                INVOICE_DOC_NO,
         D.ICODE,
         NULL                   ORDER_NO,
         NULL                   ORDER_DATE,
         NULL                   ORDER_DOC_NO,
         NULL                   ORDER_DOC_DATE,
         0                      ORDER_QTY,
         NULL                   DC_NO,
         M.PCODE,
         null channel_name,
         null channel_udf,
         NULL                   PSITE_CUSTOMER_CODE,
         M.OUTLOCCODE::TEXT           LOCCODE,
         TAX.ITEM_TAX_RATE,
         D.RATE                 INVOICE_RATE,
         0                      INVOICE_QUANTITY,
           -1
         * (  (  SUM (COALESCE (D.QTY, 0) * COALESCE (D.RATE, 0))
               + SUM (COALESCE (TAX.TAX_CHARGE_AMOUNT, 0)))
            + SUM (COALESCE (OTX.OTHER_CHARGE_AMOUNT, 0)))
            NET_SALE_AMOUNT,
         -1 * SUM (D.QTY)       RETURNED_QUANTITY,
         -1 * SUM (D.QTY)       NET_SALE_QTY,
         NULL                      DISC,
         NULL                      SPDISC,
         0                      ECOM_DISC_AMT,
         SUM (TAX.TAXABLE_AMOUNT) TAXABLE_AMOUNT,
         SUM (TAX.CGST_AMOUNT)  CGST_AMOUNT,
         SUM (TAX.SGST_AMOUNT)  SGST_AMOUNT,
         SUM (TAX.IGST_AMOUNT)  IGST_AMOUNT,
         0 OTHER_CHARGE,
         M.AGCODE,
         M.LGTCODE,
         F.NAME                 TARDE_NAME,
         NULL                   BILL_PROMO_NAME,
         NULL                   ITEM_PROMO_NAME,
         0                      ITEM_PROMO_AMT,
         D.HSN_SAC_CODE,
         EI.E_INVOICE_IRN,
         EI.E_INVOICE_ACK_DATETIME,
         EI.E_INVOICE_ACK_NO,
         M.udfstring01,
		M.udfstring02,
		M.udfstring03,
		M.udfstring04,
		M.udfstring05,
		M.udfstring06,
		M.udfstring07,
		M.udfstring08,
		M.udfstring09,
		M.udfstring10
    FROM SALRTMAIN M
         INNER JOIN SALRTDET D ON M.RTCODE = D.RTCODE
         LEFT JOIN FINTRADEGRP F ON M.SALTRADEGRP_CODE = F.CODE
         LEFT JOIN
         (  SELECT SALRTCHG_ITEM.RTCODE,
                   SALRTCHG_ITEM.SALRTDET_CODE,
                   SALRTCHG_ITEM.APPAMT               AS TAXABLE_AMOUNT,
                   SUM (COALESCE (CHGAMT, 0))         TAX_CHARGE_AMOUNT,
                   SUM (COALESCE (SALRTCHG_ITEM.RATE, 0)) AS ITEM_TAX_RATE,
                   SUM (
                      CASE
                         WHEN SALRTCHG_ITEM.GST_COMPONENT = 'CGST'
                         THEN
                            SALRTCHG_ITEM.CHGAMT
                         ELSE
                            0
                      END)
                      AS CGST_AMOUNT,
                   SUM (
                      CASE
                         WHEN SALRTCHG_ITEM.GST_COMPONENT = 'SGST'
                         THEN
                            SALRTCHG_ITEM.CHGAMT
                         ELSE
                            0
                      END)
                      AS SGST_AMOUNT,
                   SUM (
                      CASE
                         WHEN SALRTCHG_ITEM.GST_COMPONENT = 'IGST'
                         THEN
                            SALRTCHG_ITEM.CHGAMT
                         ELSE
                            0
                      END)
                      AS IGST_AMOUNT
              FROM SALRTCHG_ITEM
             WHERE SALRTCHG_ITEM.ISTAX = 'Y'
          GROUP BY SALRTCHG_ITEM.SALRTDET_CODE,
                   SALRTCHG_ITEM.RTCODE,
                   SALRTCHG_ITEM.APPAMT) TAX
            ON D.RTCODE = TAX.RTCODE AND D.CODE = TAX.SALRTDET_CODE
         LEFT OUTER JOIN
         (  SELECT RTCODE,
                   SALRTDET_CODE,
                   SUM (COALESCE (CHGAMT, 0)) OTHER_CHARGE_AMOUNT
              FROM SALRTCHG_ITEM
             WHERE ISTAX = 'N'
          GROUP BY RTCODE, SALRTDET_CODE) OTX
            ON (M.RTCODE = OTX.RTCODE AND D.CODE = OTX.SALRTDET_CODE)
         LEFT JOIN
         (SELECT A_1.TRANSACTION_CODE,
                 A_1.IRN        AS E_INVOICE_IRN,
                 A_1.ACK_DATETIME AS E_INVOICE_ACK_DATETIME,
                 A_1.ACK_NO     AS E_INVOICE_ACK_NO
            FROM INVGST_EINVOICE A_1
                 LEFT JOIN HRDEMP E ON A_1.UPDATED_BY = E.ECODE
           WHERE A_1.TRANSACTION_TABLE::TEXT = 'SALRTMAIN'::TEXT) EI
            ON M.INVCODE::TEXT = EI.TRANSACTION_CODE::TEXT
   WHERE     M.SALETYPE = 'O'
         AND M.RTDT::DATE BETWEEN TO_DATE ('@DTFR@', 'YYYY-MM-DD')
                        AND TO_DATE ('@DTTO@', 'YYYY-MM-DD')
GROUP BY M.ADMSITE_CODE_OWNER,
         M.ADMSITE_CODE,
         M.SCHEME_DOCNO,
         M.RTDT::DATE,
         M.DOCNO,
         D.ICODE,
         M.PCODE,
         M.OUTLOCCODE,
         TAX.ITEM_TAX_RATE,
         D.RATE,
         M.AGCODE,
         M.LGTCODE,
         F.NAME,
         D.HSN_SAC_CODE,
         EI.E_INVOICE_IRN,
         EI.E_INVOICE_ACK_DATETIME,
         EI.E_INVOICE_ACK_NO,
         M.udfstring01,
		M.udfstring02,
		M.udfstring03,
		M.udfstring04,
		M.udfstring05,
		M.udfstring06,
		M.udfstring07,
		M.udfstring08,
		M.udfstring09,
		M.udfstring10
UNION ALL
	SELECT
		'ECOM' SALE_TYPE,
		M.ADMSITE_CODE ADMSITE_CODE,
		NULL REF_ADMSITE_CODE,
		M.SCHEME_DOCNO INVOICE_NO,
		M.CSDATE::DATE INVOICE_DATE,
		NULL INVOICE_DOC_NO,
		D.ICODE,
		SO.ORDER_NO,
		SO.ORDER_DATE,
		NULL ORDER_DOC_NO,
		NULL ORDER_DOC_DATE,
		SO.ORDER_QTY ORDER_QTY,
		NULL DC_NO,
		NULL PCODE,
		s.slname channel_name,
		S.UDFSTRING01 channel_udf,
		M.PSITE_CUSTOMER_CODE PSITE_CUSTOMER_CODE,
		M.OUTLOCCODE::TEXT LOCCODE,
		D.TAXPERCENT ITEM_TAX_RATE,
		D.RATE INVOICE_RATE,
		SUM(CASE WHEN D.QTY>0 THEN D.QTY ELSE 0 END) AS INVOICE_QUANTITY,
		SUM(D.NETAMT) AS NET_SALE_AMOUNT,
		SUM(CASE WHEN D.QTY<0 THEN D.QTY ELSE 0 END) AS RETURNED_QUANTITY,
		SUM(D.QTY) NET_SALE_QTY,
		NULL DISC,
		NULL SPDISC,
		SUM(D.DISCOUNT) ECOM_DISC_AMT,
		SUM(D.TAXABLEAMT) TAXABLE_AMOUNT,
		SUM(D.CGSTAMT) CGST_AMOUNT,
		SUM(D.SGSTAMT) SGST_AMOUNT,
		SUM(D.IGSTAMT) IGST_AMOUNT,
		SUM(coalesce(D.shipchg,0)+coalesce(D.gwchg,0)+coalesce(D.codchg,0)) OTHER_CHARGE,
		NULL AGCODE,
		NULL LGTCODE,
		F.NAME TARDE_NAME,
		NULL BILL_PROMO_NAME,
		NULL ITEM_PROMO_NAME,
		0    ITEM_PROMO_AMT,
		D.HSN_SAC_CODE,
		EI.E_INVOICE_IRN,
		EI.E_INVOICE_ACK_DATETIME,
		EI.E_INVOICE_ACK_NO,
		M.udfstring01,
		M.udfstring02,
		M.udfstring03,
		M.udfstring04,
		M.udfstring05,
		M.udfstring06,
		M.udfstring07,
		M.udfstring08,
		M.udfstring09,
		M.udfstring10
	FROM
		SALCSMAIN M
	INNER JOIN SALCSDET D ON
		M.CSCODE = D.CSCODE
	left join finsl S on m.pcode = s.slcode
	LEFT JOIN FINTRADEGRP F ON
		M.FINTRADEGRP_CODE = F.CODE
	LEFT JOIN (
		SELECT
			SI.CSCODE CSCODE,
			SI.ICODE,
			STRING_AGG( DISTINCT RM.SCHEME_DOCNO, ',' ORDER BY RM.SCHEME_DOCNO) ORDER_NO,
			STRING_AGG(DISTINCT TO_CHAR(RM.ORDDT, 'DD-MM-YYYY'), ',' ORDER BY TO_CHAR(RM.ORDDT, 'DD-MM-YYYY')) ORDER_DATE,
			SUM(RD.QTY) ORDER_QTY
		FROM
			SALCSDET SI
		JOIN SALCSMAIN SM ON
			SI.CSCODE = SM.CSCODE
		JOIN RETAILORDDET RD ON
			SI.RETAILORDERDET_CODE = RD.CODE
		JOIN RETAILORDMAIN RM ON
			RD.ORDCODE = RM.ORDCODE
		WHERE
			SM.CHANNELTYPE = 'ETL'
		GROUP BY
			SI.CSCODE,
			SI.ICODE) SO ON
		D.CSCODE = SO.CSCODE
		AND D.ICODE = SO.ICODE
	LEFT JOIN (
		SELECT
			A_1.TRANSACTION_CODE,
			A_1.IRN AS E_INVOICE_IRN,
			A_1.ACK_DATETIME AS E_INVOICE_ACK_DATETIME,
			A_1.ACK_NO AS E_INVOICE_ACK_NO
		FROM
			INVGST_EINVOICE A_1
		LEFT JOIN HRDEMP E ON
			A_1.UPDATED_BY = E.ECODE
		WHERE
			A_1.TRANSACTION_TABLE::TEXT = 'SALCSMAIN'::TEXT) EI ON
		M.CSCODE::TEXT = EI.TRANSACTION_CODE::TEXT
	WHERE
		M.CHANNELTYPE = 'ETL'
		AND M.CSDATE::DATE BETWEEN TO_DATE('@DTFR@','YYYY-MM-DD') AND TO_DATE('@DTTO@','YYYY-MM-DD')
	GROUP BY
		M.ADMSITE_CODE,
		M.SCHEME_DOCNO,
		M.CSDATE::DATE,
		D.ICODE,
		SO.ORDER_NO,
		SO.ORDER_DATE,
		SO.ORDER_QTY,
		s.slname,
		S.UDFSTRING01,
		M.PSITE_CUSTOMER_CODE,
		M.OUTLOCCODE,
		D.TAXPERCENT,
		D.RATE,
		F.NAME,
		D.HSN_SAC_CODE,
		EI.E_INVOICE_IRN,
		EI.E_INVOICE_ACK_DATETIME,
		EI.E_INVOICE_ACK_NO,
		M.udfstring01,
		M.udfstring02,
		M.udfstring03,
		M.udfstring04,
		M.udfstring05,
		M.udfstring06,
		M.udfstring07,
		M.udfstring08,
		M.udfstring09,
		M.udfstring10
UNION ALL
	SELECT
		'POS' SALE_TYPE,
		M.ADMSITE_CODE ADMSITE_CODE,
		NULL REF_ADMSITE_CODE,
		M.BILLNO INVOICE_NO,
		M.BILLDATE::DATE INVOICE_DATE,
		NULL INVOICE_DOC_NO,
		D.ICODE,
		SO.ORDER_NO,
		SO.ORDER_DATE,
		NULL ORDER_DOC_NO,
		NULL ORDER_DOC_DATE,
		SO.ORDER_QTY ORDER_QTY,
		NULL DC_NO,
		NULL PCODE,
		null channel_name,
		null channel_udf,
		M.PSITE_CUSTOMER_CODE PSITE_CUSTOMER_CODE,
		M.PSITE_CUSTOMER_CODE LOCCODE,
		D.TAXPERCENT ITEM_TAX_RATE,
		D.RSP INVOICE_RATE,
		SUM(CASE WHEN D.QTY>0 THEN D.QTY ELSE 0 END) AS INVOICE_QUANTITY,
		SUM(D.NETAMT) AS NET_SALE_AMOUNT,
		SUM(CASE WHEN D.QTY<0 THEN D.QTY ELSE 0 END) AS RETURNED_QUANTITY,
		SUM(D.QTY) NET_SALE_QTY,
		NULL DISC,
		NULL SPDISC,
		SUM(D.DISCOUNTAMT) ECOM_DISC_AMT,
		SUM(D.TAXABLEAMT) TAXABLE_AMOUNT,
		SUM(D.CGSTAMT) CGST_AMOUNT,
		SUM(D.SGSTAMT) SGST_AMOUNT,
		SUM(D.IGSTAMT) IGST_AMOUNT,
		0 OTHER_CHARGE,
		NULL AGCODE,
		NULL LGTCODE,
		F.NAME TARDE_NAME,
		M.PROMONAME BILL_PROMO_NAME,
		D.PROMONO ITEM_PROMO_NAME,
		SUM(D.promoamt) ITEM_PROMO_AMT,
		D.HSN_SAC_CODE,
		EI.E_INVOICE_IRN,
		EI.E_INVOICE_ACK_DATETIME,
		EI.E_INVOICE_ACK_NO,
		M.udfstring1 udfstring01,
		M.udfstring2 udfstring02,
		M.udfstring3 udfstring03,
		M.udfstring4 udfstring04,
		M.udfstring5 udfstring05,
		M.udfstring6 udfstring06,
		M.udfstring7 udfstring07,
		M.udfstring8 udfstring08,
		M.udfstring9 udfstring09,
		M.udfstring10 udfstring01
	FROM
		PSITE_POSBILL M
	INNER JOIN PSITE_POSBILLITEM D ON
		M.CODE = D.PSITE_POSBILL_CODE
	LEFT JOIN FINTRADEGRP F ON
		M.FINTRADEGRP_CODE = F.CODE
	LEFT JOIN (
		SELECT
			SI.PSITE_POSBILL_CODE CODE,
			SI.ICODE,
			STRING_AGG( DISTINCT RM.ORDERNO, ',' ORDER BY RM.ORDERNO) ORDER_NO,
			STRING_AGG(DISTINCT TO_CHAR(RM.ORDERDATE, 'DD-MM-YYYY'), ',' ORDER BY TO_CHAR(RM.ORDERDATE, 'DD-MM-YYYY')) ORDER_DATE,
			SUM(RD.QTY) ORDER_QTY
		FROM
			PSITE_POSBILLITEM SI
		JOIN PSITE_POSBILL SM ON
			SI.PSITE_POSBILL_CODE = SM.CODE
		JOIN PSITE_POSORDERITEM RD ON
			SI.PSITE_POSORDERITEM_CODE = RD.CODE
		JOIN PSITE_POSORDER RM ON
			RD.PSITE_POSORDER_CODE = RM.CODE
		GROUP BY
			SI.PSITE_POSBILL_CODE,
			SI.ICODE) SO ON
		D.PSITE_POSBILL_CODE = SO.CODE
		AND D.ICODE = SO.ICODE
	LEFT JOIN (
		SELECT
			A_1.TRANSACTION_CODE,
			A_1.IRN AS E_INVOICE_IRN,
			A_1.ACK_DATETIME AS E_INVOICE_ACK_DATETIME,
			A_1.ACK_NO AS E_INVOICE_ACK_NO
		FROM
			INVGST_EINVOICE A_1
		LEFT JOIN HRDEMP E ON
			A_1.UPDATED_BY = E.ECODE
		WHERE
			A_1.TRANSACTION_TABLE::TEXT = 'POSBill'::TEXT) EI ON
		M.CODE::TEXT = EI.TRANSACTION_CODE::TEXT
		WHERE M.BILLDATE::DATE BETWEEN TO_DATE('@DTFR@','YYYY-MM-DD') AND TO_DATE('@DTTO@','YYYY-MM-DD')
	GROUP BY
		M.ADMSITE_CODE,
		M.BILLNO ,
		M.BILLDATE::DATE ,
		D.ICODE,
		SO.ORDER_NO,
		SO.ORDER_DATE,
		SO.ORDER_QTY,
		M.PSITE_CUSTOMER_CODE ,
		M.PSITE_CUSTOMER_CODE ,
		D.TAXPERCENT,
		D.RSP,
		F.NAME ,
		M.PROMONAME ,
		D.PROMONO ,
		D.HSN_SAC_CODE,
		EI.E_INVOICE_IRN,
		EI.E_INVOICE_ACK_DATETIME,
		EI.E_INVOICE_ACK_NO,
		M.udfstring1,
		M.udfstring2,
		M.udfstring3,
		M.udfstring4,
		M.udfstring5,
		M.udfstring6,
		M.udfstring7,
		M.udfstring8,
		M.udfstring9,
		M.udfstring10)X